#pragma once
#include <cstdint>

// 基于图片渐变的RGB颜色数组 (6x6矩阵，每个LED 3字节RGB)
// 从左到右，从上到下的顺序，颜色从深蓝/紫色渐变到浅粉/红色
static const uint8_t GRADIENT_RGB_PATTERN[108] = {
    0xFF,0x00,0x00,0xFF,0x00,0x00,0xFC,0x03,0x02,0x00,0xFF,0x00,0x00,0xFF,0x00,0x00,0xFF,0x00,0xFF,0x00,0x00,0xFF,0x00,0x00,0xFF,0x00,0x00,0x00,0xFF,0x00,0x00,0xFF,0x00,0x00,0xFF,0x00,0xFF,0x00,0x00,
0xFF,0x00,0x00,0xFF,0x00,0x00,0x00,0xFF,0x00,0x00,0xFF,0x00,0x00,0xFF,0x00,0xFF,0x00,0xFF,0xFF,0x00,0xFF,0xFF,0x00,0xFF,0x00,0x00,0xFF,0x00,0x00,0xFF,0x00,0x00,0xFF,0xFF,0x00,0xFF,0xFF,0x00,0xFF,0xFF,0x00,0xFF,0x00,0x00,0xFF,0x00,0x00,0xFF,0x00,0x00,0xFF,0xFF,0x00,0xFF,0xFF,0x00,0xFF,0xFF,0x00,0xFF,
0x00,0x00,0xFF,0x00,0x00,0xFF,0x00,0x00,0xFF   
};
// 获取指定LED索引的RGB值
inline void getGradientRGBByIndex(uint8_t ledIndex, uint8_t& r, uint8_t& g, uint8_t& b) {
    if (ledIndex < 36) {
        uint8_t baseIndex = ledIndex * 3;
        r = GRADIENT_RGB_PATTERN[baseIndex];
        g = GRADIENT_RGB_PATTERN[baseIndex + 1];
        b = GRADIENT_RGB_PATTERN[baseIndex + 2];
    } else {
        r = g = b = 0;
    }
} 